apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

def androidConfig = rootProject.ext.android
def dependence = rootProject.ext.dependence

android {
    compileSdkVersion androidConfig.compileSdkVersion
    buildToolsVersion androidConfig.buildToolsVersion
    useLibrary 'org.apache.http.legacy'

    //这个是ARouter需要配置的kapt
    kapt {
        arguments {
            arg("AROUTER_MODULE_NAME", project.getName())
        }
    }

    defaultConfig {
        multiDexEnabled true
        minSdkVersion androidConfig.minSdkVersion
        targetSdkVersion androidConfig.targetSdkVersion
//        versionCode rootProject.ext.android["versionCode"] //TODO
//        versionName rootProject.ext.android["versionName"]

        ndk { //设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters 'armeabi'//, 'x86'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }

    signingConfigs { //
        File file = new File('C:\\Users\\Administrator\\Desktop\\Mvp\\mvp.jks')
        debug {
            keyAlias 'key'
            keyPassword '123456'
            storeFile file
            storePassword '123456'
        }
        release {
            keyAlias 'key'
            keyPassword '123456'
            storeFile file
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "LOG_DEBUG", "true"
            minifyEnabled false
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro', '../proguard-rules-core.pro', '../proguard-rules-androidx.pro', '../proguard-rules-third.pro'
            signingConfig signingConfigs.debug
        }

        release {
            buildConfigField "boolean", "LOG_DEBUG", "false"
            minifyEnabled true
            shrinkResources false
            zipAlignEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), '../proguard-rules.pro', '../proguard-rules-core.pro', '../proguard-rules-androidx.pro', '../proguard-rules-third.pro'
            signingConfig signingConfigs.release
        }
    }

    //不进行代码静态检测
    lintOptions {
        abortOnError false
    }

    //支持java8
    compileOptions {
        targetCompatibility JavaVersion.VERSION_1_8
        sourceCompatibility JavaVersion.VERSION_1_8
    }

    //生成libs目录
//    sourceSets { //TODO
//        main.jniLibs.srcDirs = ['libs']
//    }

    //支持@Parcelize来实现Parcelable序列化
    androidExtensions {
        experimental = true
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation dependence['multidex']


    implementation dependence['kotlin-stdlib-jdk7']
    implementation dependence['appcompat']
    implementation dependence['core-ktx']

    //dagger
    api dependence["dagger2"]
    api dependence["dagger2-android"]
    api dependence["dagger2-android-support"]
    kapt dependence["dagger2-compiler"]

    //arouter
    kapt dependence['arouter-compiler']
    api dependence['arouter']
}
